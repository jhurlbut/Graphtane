<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|Win32">
      <Configuration>MinSizeRel</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|Win32">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGUID>{250109FA-B605-4813-A3BE-409E13DC52D6}</ProjectGUID>
    <Keyword>Win32Proj</Keyword>
    <Platform>Win32</Platform>
    <ProjectName>TestFluid3d</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v110</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v110</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v110</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v110</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
    <PropertyGroup>
      <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">D:\projects\Graphtane\build\bin\Debug\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">TestFluid3d.dir\Debug\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">TestFluid3d</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">.exe</TargetExt>
      <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</LinkIncremental>
      <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</GenerateManifest>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">D:\projects\Graphtane\build\bin\Release\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">TestFluid3d.dir\Release\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">TestFluid3d</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">.exe</TargetExt>
      <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkIncremental>
      <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</GenerateManifest>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">D:\projects\Graphtane\build\bin\MinSizeRel\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">TestFluid3d.dir\MinSizeRel\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">TestFluid3d</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">.exe</TargetExt>
      <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkIncremental>
      <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">true</GenerateManifest>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">D:\projects\Graphtane\build\bin\RelWithDebInfo\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">TestFluid3d.dir\RelWithDebInfo\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">TestFluid3d</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">.exe</TargetExt>
      <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">true</LinkIncremental>
      <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">true</GenerateManifest>
    </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:/projects/Cinder/boost;D:/projects/Graphtane/src/TestFluid3d/..;D:/projects/island/3rdparty/glew;D:/projects/openFrameworks/libs/glfw/include;D:/projects/glm;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v6.0/include;D:/projects/NVIDIA GPU Computing SDK/OpenCL/common/inc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Debug/</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_DEBUG;CMAKE_INTDIR="Debug";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_DEBUG;CMAKE_INTDIR=\"Debug\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:/projects/Cinder/boost;D:/projects/Graphtane/src/TestFluid3d/..;D:/projects/island/3rdparty/glew;D:/projects/openFrameworks/libs/glfw/include;D:/projects/glm;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v6.0/include;D:/projects/NVIDIA GPU Computing SDK/OpenCL/common/inc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:/projects/Cinder/boost;D:/projects/Graphtane/src/TestFluid3d/..;D:/projects/island/3rdparty/glew;D:/projects/openFrameworks/libs/glfw/include;D:/projects/glm;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v6.0/include;D:/projects/NVIDIA GPU Computing SDK/OpenCL/common/inc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalOptions> /machine:X86 /debug %(AdditionalOptions)</AdditionalOptions>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;GComputed.lib;..\..\lib\Debug\GFluidd.lib;..\..\lib\Debug\GComputeVisd.lib;GAppFrameworkd.lib;GCommond.lib;GVisd.lib;glu32.lib;opengl32.lib;D:\projects\glew-1.10.0\lib\Release\Win32\glew32s.lib;D:\projects\glew-1.10.0\lib\Release MX\Win32\glew32mxs.lib;D:\projects\openFrameworks\libs\glfw\lib\vs\glfw3.lib;D:\projects\NVIDIA GPU Computing SDK\OpenCL\common\lib\Win32\OpenCL.lib;GComputed.lib;glu32.lib;opengl32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>D:/projects/Graphtane/build/lib;D:/projects/Graphtane/build/lib/$(Configuration);;D:/boost_prebuilt_53/lib32;D:/boost_prebuilt_53/lib32/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <ImportLibrary>D:/projects/Graphtane/build/lib/Debug/TestFluid3d.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/projects/Graphtane/build/bin/Debug/TestFluid3d.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version></Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:/projects/Cinder/boost;D:/projects/Graphtane/src/TestFluid3d/..;D:/projects/island/3rdparty/glew;D:/projects/openFrameworks/libs/glfw/include;D:/projects/glm;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v6.0/include;D:/projects/NVIDIA GPU Computing SDK/OpenCL/common/inc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Release/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat></DebugInformationFormat>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="Release";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"Release\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:/projects/Cinder/boost;D:/projects/Graphtane/src/TestFluid3d/..;D:/projects/island/3rdparty/glew;D:/projects/openFrameworks/libs/glfw/include;D:/projects/glm;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v6.0/include;D:/projects/NVIDIA GPU Computing SDK/OpenCL/common/inc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:/projects/Cinder/boost;D:/projects/Graphtane/src/TestFluid3d/..;D:/projects/island/3rdparty/glew;D:/projects/openFrameworks/libs/glfw/include;D:/projects/glm;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v6.0/include;D:/projects/NVIDIA GPU Computing SDK/OpenCL/common/inc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalOptions> /machine:X86 %(AdditionalOptions)</AdditionalOptions>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;..\..\lib\Release\GCompute.lib;..\..\lib\Release\GFluid.lib;..\..\lib\Release\GComputeVis.lib;..\..\lib\Release\GAppFramework.lib;..\..\lib\Release\GCommon.lib;..\..\lib\Release\GVis.lib;glu32.lib;opengl32.lib;D:\projects\glew-1.10.0\lib\Release\Win32\glew32s.lib;D:\projects\glew-1.10.0\lib\Release MX\Win32\glew32mxs.lib;D:\projects\openFrameworks\libs\glfw\lib\vs\glfw3.lib;..\..\lib\Release\GCompute.lib;D:\projects\NVIDIA GPU Computing SDK\OpenCL\common\lib\Win32\OpenCL.lib;..\..\lib\Release\GCommon.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>D:/projects/Graphtane/build/lib;D:/projects/Graphtane/build/lib/$(Configuration);;D:/boost_prebuilt_53/lib32;D:/boost_prebuilt_53/lib32/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <ImportLibrary>D:/projects/Graphtane/build/lib/Release/TestFluid3d.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/projects/Graphtane/build/bin/Release/TestFluid3d.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version></Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:/projects/Cinder/boost;D:/projects/Graphtane/src/TestFluid3d/..;D:/projects/island/3rdparty/glew;D:/projects/openFrameworks/libs/glfw/include;D:/projects/glm;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v6.0/include;D:/projects/NVIDIA GPU Computing SDK/OpenCL/common/inc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>MinSizeRel/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat></DebugInformationFormat>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="MinSizeRel";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"MinSizeRel\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:/projects/Cinder/boost;D:/projects/Graphtane/src/TestFluid3d/..;D:/projects/island/3rdparty/glew;D:/projects/openFrameworks/libs/glfw/include;D:/projects/glm;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v6.0/include;D:/projects/NVIDIA GPU Computing SDK/OpenCL/common/inc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:/projects/Cinder/boost;D:/projects/Graphtane/src/TestFluid3d/..;D:/projects/island/3rdparty/glew;D:/projects/openFrameworks/libs/glfw/include;D:/projects/glm;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v6.0/include;D:/projects/NVIDIA GPU Computing SDK/OpenCL/common/inc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalOptions> /machine:X86 %(AdditionalOptions)</AdditionalOptions>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;..\..\lib\MinSizeRel\GCompute.lib;..\..\lib\MinSizeRel\GFluid.lib;..\..\lib\MinSizeRel\GComputeVis.lib;..\..\lib\MinSizeRel\GAppFramework.lib;..\..\lib\MinSizeRel\GCommon.lib;..\..\lib\MinSizeRel\GVis.lib;glu32.lib;opengl32.lib;D:\projects\glew-1.10.0\lib\Release\Win32\glew32s.lib;D:\projects\glew-1.10.0\lib\Release MX\Win32\glew32mxs.lib;D:\projects\openFrameworks\libs\glfw\lib\vs\glfw3.lib;..\..\lib\MinSizeRel\GCompute.lib;D:\projects\NVIDIA GPU Computing SDK\OpenCL\common\lib\Win32\OpenCL.lib;..\..\lib\MinSizeRel\GCommon.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>D:/projects/Graphtane/build/lib;D:/projects/Graphtane/build/lib/$(Configuration);;D:/boost_prebuilt_53/lib32;D:/boost_prebuilt_53/lib32/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <ImportLibrary>D:/projects/Graphtane/build/lib/MinSizeRel/TestFluid3d.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/projects/Graphtane/build/bin/MinSizeRel/TestFluid3d.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version></Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:/projects/Cinder/boost;D:/projects/Graphtane/src/TestFluid3d/..;D:/projects/island/3rdparty/glew;D:/projects/openFrameworks/libs/glfw/include;D:/projects/glm;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v6.0/include;D:/projects/NVIDIA GPU Computing SDK/OpenCL/common/inc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>RelWithDebInfo/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="RelWithDebInfo";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"RelWithDebInfo\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:/projects/Cinder/boost;D:/projects/Graphtane/src/TestFluid3d/..;D:/projects/island/3rdparty/glew;D:/projects/openFrameworks/libs/glfw/include;D:/projects/glm;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v6.0/include;D:/projects/NVIDIA GPU Computing SDK/OpenCL/common/inc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:/projects/Cinder/boost;D:/projects/Graphtane/src/TestFluid3d/..;D:/projects/island/3rdparty/glew;D:/projects/openFrameworks/libs/glfw/include;D:/projects/glm;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v6.0/include;D:/projects/NVIDIA GPU Computing SDK/OpenCL/common/inc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalOptions> /machine:X86 /debug %(AdditionalOptions)</AdditionalOptions>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;..\..\lib\RelWithDebInfo\GCompute.lib;..\..\lib\RelWithDebInfo\GFluid.lib;..\..\lib\RelWithDebInfo\GComputeVis.lib;..\..\lib\RelWithDebInfo\GAppFramework.lib;..\..\lib\RelWithDebInfo\GCommon.lib;..\..\lib\RelWithDebInfo\GVis.lib;glu32.lib;opengl32.lib;D:\projects\glew-1.10.0\lib\Release\Win32\glew32s.lib;D:\projects\glew-1.10.0\lib\Release MX\Win32\glew32mxs.lib;D:\projects\openFrameworks\libs\glfw\lib\vs\glfw3.lib;..\..\lib\RelWithDebInfo\GCompute.lib;D:\projects\NVIDIA GPU Computing SDK\OpenCL\common\lib\Win32\OpenCL.lib;..\..\lib\RelWithDebInfo\GCommon.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>D:/projects/Graphtane/build/lib;D:/projects/Graphtane/build/lib/$(Configuration);;D:/boost_prebuilt_53/lib32;D:/boost_prebuilt_53/lib32/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <ImportLibrary>D:/projects/Graphtane/build/lib/RelWithDebInfo/TestFluid3d.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/projects/Graphtane/build/bin/RelWithDebInfo/TestFluid3d.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version></Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\..\src\TestFluid3d\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Building Custom Rule D:/projects/Graphtane/src/TestFluid3d/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files (x86)\CMake 2.8\bin\cmake.exe" -HD:/projects/Graphtane -BD:/projects/Graphtane/build --check-stamp-file D:\projects\Graphtane\build\src\TestFluid3d\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">D:/projects/Graphtane/src/TestFluid3d/CMakeLists.txt;D:\projects\Graphtane\src\TestFluid3d\CMakeLists.txt;D:\projects\Graphtane\CMake\FindGAppFramework.cmake;D:\projects\Graphtane\CMake\FindGCommon.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\CMake\FindGVis.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindOpenGL.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\CMake\FindGLEW.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\CMake\FindGLFW.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\CMake\FindGLM.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\CMake\FindGCompute.cmake;D:\projects\Graphtane\CMake\FindOPENCL.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindOpenGL.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\CMake\FindGLEW.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\src\TestFluid3d\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">D:\projects\Graphtane\build\src\TestFluid3d\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Building Custom Rule D:/projects/Graphtane/src/TestFluid3d/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files (x86)\CMake 2.8\bin\cmake.exe" -HD:/projects/Graphtane -BD:/projects/Graphtane/build --check-stamp-file D:\projects\Graphtane\build\src\TestFluid3d\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">D:/projects/Graphtane/src/TestFluid3d/CMakeLists.txt;D:\projects\Graphtane\src\TestFluid3d\CMakeLists.txt;D:\projects\Graphtane\CMake\FindGAppFramework.cmake;D:\projects\Graphtane\CMake\FindGCommon.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\CMake\FindGVis.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindOpenGL.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\CMake\FindGLEW.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\CMake\FindGLFW.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\CMake\FindGLM.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\CMake\FindGCompute.cmake;D:\projects\Graphtane\CMake\FindOPENCL.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindOpenGL.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\CMake\FindGLEW.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\src\TestFluid3d\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">D:\projects\Graphtane\build\src\TestFluid3d\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Building Custom Rule D:/projects/Graphtane/src/TestFluid3d/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files (x86)\CMake 2.8\bin\cmake.exe" -HD:/projects/Graphtane -BD:/projects/Graphtane/build --check-stamp-file D:\projects\Graphtane\build\src\TestFluid3d\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">D:/projects/Graphtane/src/TestFluid3d/CMakeLists.txt;D:\projects\Graphtane\src\TestFluid3d\CMakeLists.txt;D:\projects\Graphtane\CMake\FindGAppFramework.cmake;D:\projects\Graphtane\CMake\FindGCommon.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\CMake\FindGVis.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindOpenGL.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\CMake\FindGLEW.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\CMake\FindGLFW.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\CMake\FindGLM.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\CMake\FindGCompute.cmake;D:\projects\Graphtane\CMake\FindOPENCL.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindOpenGL.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\CMake\FindGLEW.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\src\TestFluid3d\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">D:\projects\Graphtane\build\src\TestFluid3d\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Building Custom Rule D:/projects/Graphtane/src/TestFluid3d/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files (x86)\CMake 2.8\bin\cmake.exe" -HD:/projects/Graphtane -BD:/projects/Graphtane/build --check-stamp-file D:\projects\Graphtane\build\src\TestFluid3d\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">D:/projects/Graphtane/src/TestFluid3d/CMakeLists.txt;D:\projects\Graphtane\src\TestFluid3d\CMakeLists.txt;D:\projects\Graphtane\CMake\FindGAppFramework.cmake;D:\projects\Graphtane\CMake\FindGCommon.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\CMake\FindGVis.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindOpenGL.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\CMake\FindGLEW.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\CMake\FindGLFW.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\CMake\FindGLM.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\CMake\FindGCompute.cmake;D:\projects\Graphtane\CMake\FindOPENCL.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindOpenGL.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\CMake\FindGLEW.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake 2.8\share\cmake-2.8\Modules\CMakeParseArguments.cmake;D:\projects\Graphtane\src\TestFluid3d\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">D:\projects\Graphtane\build\src\TestFluid3d\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\..\..\src\TestFluid3d\Main.cpp"  />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:/projects/Graphtane/build/src/GAppFramework/GAppFramework.vcxproj">
      <Project>360A24D6-76FF-42AB-A1B7-F4C12974E74B</Project>
    </ProjectReference>
    <ProjectReference Include="D:/projects/Graphtane/build/src/GCommon/GCommon.vcxproj">
      <Project>91AFE530-BDB1-4816-B4B4-08437D0861F5</Project>
    </ProjectReference>
    <ProjectReference Include="D:/projects/Graphtane/build/src/GCompute/GCompute.vcxproj">
      <Project>6A14327F-E0D2-4869-8D8C-520020923C4F</Project>
    </ProjectReference>
    <ProjectReference Include="D:/projects/Graphtane/build/src/GComputeVis/GComputeVis.vcxproj">
      <Project>26D7CA07-B3D7-4E6A-A396-C8503E76DF48</Project>
    </ProjectReference>
    <ProjectReference Include="D:/projects/Graphtane/build/src/GFluid/GFluid.vcxproj">
      <Project>2AD985BE-E9FB-4988-872C-9297C5901E2B</Project>
    </ProjectReference>
    <ProjectReference Include="D:/projects/Graphtane/build/src/GVis/GVis.vcxproj">
      <Project>49D772DF-68D8-49B7-8A48-B6AB62E85FAD</Project>
    </ProjectReference>
    <ProjectReference Include="D:/projects/Graphtane/build/ZERO_CHECK.vcxproj">
      <Project>E8AF8B03-A175-4514-97CD-CA12FBE137B9</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>